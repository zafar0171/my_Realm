# Use Pandas to import the data from "fcc-forum-pageviews.csv". Set the index to the date column.
# Clean the data by filtering out days when the page views were in the top 2.5% of the dataset or bottom 2.5% of the dataset.
# Create a draw_line_plot function that uses Matplotlib to draw a line chart similar to "examples/Figure_1.png". The title should be Daily freeCodeCamp Forum Page Views 5/2016-12/2019. The label on the x axis should be Date and the label on the y axis should be Page Views.
# Create a draw_bar_plot function that draws a bar chart similar to "examples/Figure_2.png". It should show average daily page views for each month grouped by year. The legend should show month labels and have a title of Months. On the chart, the label on the x axis should be Years and the label on the y axis should be Average Page Views.
# Create a draw_box_plot function that uses Seaborn to draw two adjacent box plots similar to "examples/Figure_3.png". These box plots should show how the values are distributed within a given year or month and how it compares over time. The title of the first chart should be Year-wise Box Plot (Trend) and the title of the second chart should be Month-wise Box Plot (Seasonality). Make sure the month labels on bottom start at Jan and the x and y axis are labeled correctly. The boilerplate includes commands to prepare the data.

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

page = pd.read_csv('fcc-forum-pageviews.csv',index_col='date', parse_dates=True)

page.head(5)

page = page[ page["value"].between( page["value"].quantile(.025), page["value"].quantile(.975) ) ]
months= ['January', 'February', 'March', 'April', 'May', 'June', 
         'July', 'August', 'September', 'October', 'November', 'December']


def draw_line_plot():
    
    fig, ax = plt.subplots(figsize=(15,5))
    ax = sns.lineplot(data = page, legend="brief")
    ax.set(title='Daily fcc Page Views 5/2016-12/2019')
    ax.set(xlabel = "Date",ylabel = "Page Views")
    fig.savefig('line_plot.png')
    return fig

draw_line_plot()

def draw_bar_plot():
    
    page_bar = page.copy()
    page_bar["year"] = page.index.year.values
    page_bar["month"] = page.index.month_name()
    
    fig, ax = plt.subplots(figsize=(15,5))
    
    ax = sns.barplot(x="year", hue="month", y="value", data=page_bar, hue_order = months, ci=None )
    ax.set(xlabel = "Years",ylabel = "Average Page Views")
    
    fig.savefig('bar_plot.png')
    return fig

draw_bar_plot()

def draw_box_plot():
    
    page_box = page.copy()
    page_box.reset_index(inplace=True)
    page_box['year'] = [d.year for d in page_box.date]
    page_box['month'] = [d.strftime('%b') for d in page_box.date]


    page_box['monthnumber'] = page.index.month
    page_box = page_box.sort_values('monthnumber')
    fig, ax = plt.subplots(1,2,figsize=(16,6))
    sns.boxplot(y = "value", x = "year", data = page_box, ax = ax[0] ) 
    ax[0].set(xlabel="Year", ylabel="Page Views", title="Year-wise Box Plot (Trend)")
    sns.boxplot(y = "value", x = "month", data = page_box, ax = ax[1])
    ax[1].set(xlabel="Month", ylabel="Page Views", title="Month-wise Box Plot (Seasonality)")
    
    fig.savefig('box_plot.png')
    return fig

draw_box_plot()

